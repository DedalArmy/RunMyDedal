transformation dedalToSpringDSL(in dedal : DedalModel, out springdsl : SpringModel);

modeltype SpringModel "strict" uses springConfigDsl('http://www.xtext.org/spring/SpringConfigDsl');
modeltype DedalModel "strict" uses dedal('http://www.dedal.fr/metamodel');

main() {

	dedal.rootObjects()[dedal::DedalDiagram] ->map toSpringModel();

}

mapping DedalModel::DedalDiagram::toSpringModel() : SpringModel::SpringProject {
	configurations := self.architectureDescriptions.getConfigurations();
	
}

mapping DedalModel::ArchitectureDescription::toSpringConfiguration() : SpringModel::Configuration
		 {

}

mapping DedalModel::Assembly::toSpringConfiguration() : SpringModel::Configuration {
	components := self.assmComponents-> map toSpringComp();
	
}

mapping DedalModel::CompInstance::toSpringComp() : SpringModel::Component {
	name := self.name;
	if(self.instantiates.oclIsTypeOf(DedalModel::CompClass)){
		_class._class.oclAsType(SpringModel::Class).classname := self.instantiates.name;
	}
}
//on recupere les configurations du spring project grace au truc dedal il 
query DedalModel::ArchitectureDescription::getConfigurations() : OrderedSet(SpringModel::Configuration) {
	var configurations : OrderedSet(SpringModel::Configuration);
	if(self.oclAsType(DedalModel::Assembly)){
		configurations += self.map toSpringConfiguration();	
	};
	return configurations;
}

